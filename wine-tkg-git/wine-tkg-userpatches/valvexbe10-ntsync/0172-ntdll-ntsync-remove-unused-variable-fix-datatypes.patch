From c2581b6113570ccd2d06381d3e98717deb322ed5 Mon Sep 17 00:00:00 2001
From: Etaash Mathamsetty
 <45927311+Etaash-mathamsetty@users.noreply.github.com>
Date: Mon, 14 Jul 2025 03:45:49 -0400
Subject: [PATCH 172/177] ntdll/ntsync: remove unused variable & fix datatypes.

---
 dlls/ntdll/unix/sync.c         | 7 +++----
 dlls/ntdll/unix/unix_private.h | 2 +-
 2 files changed, 4 insertions(+), 5 deletions(-)

diff --git a/dlls/ntdll/unix/sync.c b/dlls/ntdll/unix/sync.c
index 8a09a8ee347..b587750c349 100644
--- a/dlls/ntdll/unix/sync.c
+++ b/dlls/ntdll/unix/sync.c
@@ -416,7 +416,7 @@ static inline unsigned int inproc_sync_handle_to_index( HANDLE handle, unsigned
     return idx % INPROC_SYNC_CACHE_BLOCK_SIZE;
 }
 
-static struct inproc_sync_cache_entry *cache_inproc_sync_obj( HANDLE handle, obj_handle_t inproc_sync, int fd,
+static struct inproc_sync_cache_entry *cache_inproc_sync_obj( HANDLE handle, int fd,
                                                               enum inproc_sync_type type, unsigned int access )
 {
     unsigned int entry, idx = inproc_sync_handle_to_index( handle, &entry );
@@ -528,7 +528,6 @@ static NTSTATUS get_inproc_sync_obj( HANDLE handle, enum inproc_sync_type desire
                                      struct inproc_sync_cache_entry **ret_cache )
 {
     struct inproc_sync_cache_entry *cache;
-    obj_handle_t inproc_sync_handle;
     enum inproc_sync_type type;
     unsigned int access;
     sigset_t sigset;
@@ -582,7 +581,7 @@ static NTSTATUS get_inproc_sync_obj( HANDLE handle, enum inproc_sync_type desire
         return ret;
     }
 
-    cache = cache_inproc_sync_obj( handle, inproc_sync_handle, fd, type, access );
+    cache = cache_inproc_sync_obj( handle, fd, type, access );
 
     server_leave_uninterrupted_section( &fd_cache_mutex, &sigset );
 
@@ -922,7 +921,7 @@ static NTSTATUS linux_wait_objs( int device, const DWORD count, const int *objs,
     else if (timeout->QuadPart <= 0)
     {
         clock_gettime( CLOCK_MONOTONIC, &now );
-        args.timeout = (now.tv_sec * NSECPERSEC) + now.tv_nsec + (-timeout->QuadPart * 100);
+        args.timeout = ((__s64)now.tv_sec * NSECPERSEC) + now.tv_nsec + (-timeout->QuadPart * 100);
     }
     else
     {
diff --git a/dlls/ntdll/unix/unix_private.h b/dlls/ntdll/unix/unix_private.h
index 9cb81ff67bb..bfff0f1e0f7 100644
--- a/dlls/ntdll/unix/unix_private.h
+++ b/dlls/ntdll/unix/unix_private.h
@@ -416,7 +416,7 @@ extern void call_raise_user_exception_dispatcher(void);
 extern const char * wine_debuginfostr_pc(void *pc);
 
 #define TICKSPERSEC 10000000
-#define NSECPERSEC 1000000000
+#define NSECPERSEC (LONG64)1000000000
 #define SECS_1601_TO_1970  ((369 * 365 + 89) * (ULONGLONG)86400)
 
 static inline ULONGLONG ticks_from_time_t( time_t time )
-- 
2.50.0

